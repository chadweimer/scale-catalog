gomp:

  replicaCount: 1

  image:
    repository: cwmr/gomp
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  podSecurityContext:
    fsGroup: 568

  service:
    type: NodePort
    port: 5000
    nodePort: 15000

  ingress:
    enabled: false
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: gomp.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: gomp-tls
    #    hosts:
    #      - gomp.local

  persistence:
    data:
      enabled: true
      type: pvc
      existingClaim: ""
      accessModes:
        - ReadWriteOnce
      volumeMode: Filesystem
      selector: {}
      size: 1Gi
      storageClass: ""
      # type: hostPath
      # hostPath: /path/on/host

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  gomp:
    probes:
      liveness: "/"
      readiness: "/"
    env: []
    secureKey: ChangeMe
    existingSecret: ""
    uploads:
      driver: fs
    aws:
      auth:
        accessKeyId: ""
        secretAccessKey: ""
      bucket: ""
      region: ""
    backups:
      db: []
        # - name: daily
        #   schedule: "0 3 * * *"
        #   destination:
        #     type: s3
        #     bucket: name-of-bucket
        # - name: weekly
        #   schedule: "0 3 * * 0"
        #   destination:
        #     type: nfs
        #     server: 1.2.3.4
        #     path: /path/to/share
        #     subPath: sub/path
      data: []
        # - name: daily
        #   schedule: "0 3 * * *"
        #   destination:
        #     type: s3
        #     bucket: name-of-bucket
        # - name: weekly
        #   schedule: "0 3 * * 0"
        #   destination:
        #     type: nfs
        #     server: 1.2.3.4
        #     path: /path/to/share
        #     subPath: sub/path

  postgresql:
    enabled: false
    auth:
      database: gomp
      username: gomp
      password: ChangeMe
      existingSecret: ""
    service:
      ports:
        postgresql: 5432
    primary:
        podSecurityContext:
          enabled: true
          fsGroup: 568
        containerSecurityContext:
          enabled: false
    #   extraVolumes:
    #     - name: customData
    #       hostPath:
    #         path: ""
    #   extraVolumeMounts:
    #     - name: customData
    #       mountPath: /bitnami/postgresql
    #       subPath: ""
